{"ast":null,"code":"import axios from 'axios';\nimport { GET_PRODUCTS_BY_SELL, GET_PRODUCTS_BY_ARRIVAL, GET_BRANDS, GET_WOODS, GET_PRODUCTS_TO_SHOP } from \"./types\";\nimport { PRODUCT_SERVER } from '../components/utils/misc';\nexport function getProductsBySell() {\n  // /articles?sortBy=sold&order=desc&limit=4\n  const request = axios.get(`${PRODUCT_SERVER}/articles?sortBy=sold&order=desc&limit=4`).then(response => response.data).catch(e => console.log(e));\n  return {\n    type: GET_PRODUCTS_BY_SELL,\n    payload: request\n  };\n}\nexport function getProductsByArrival() {\n  // /articles?sortBy=createdAt&order=desc&limit=4\n  const request = axios.get(`${PRODUCT_SERVER}/articles?sortBy=createdAt&order=desc&limit=4`).then(response => response.data).catch(e => console.log(e));\n  return {\n    type: GET_PRODUCTS_BY_ARRIVAL,\n    payload: request\n  };\n}\nexport function getProductsToShop(skip, limit, filters = [], previousState = []) {\n  const data = {\n    limit,\n    skip,\n    filters\n  };\n  const request = axios.post(`${PRODUCT_SERVER}/shop`, data).then(response => {\n    let newState = [...previousState, ...response.data.articles];\n    return {\n      size: response.data.size,\n      articles: newState\n    };\n  });\n  return {\n    type: GET_PRODUCTS_TO_SHOP,\n    payload: request\n  };\n}\n/* ================================== */\n\n/* Categories */\n\n/* ================================== */\n\nexport function getBrands() {\n  const request = axios.get(`${PRODUCT_SERVER}/brands`).then(response => response.data);\n  return {\n    type: GET_BRANDS,\n    payload: request\n  };\n}\nexport function getWoods() {\n  const request = axios.get(`${PRODUCT_SERVER}/woods`).then(response => response.data);\n  return {\n    type: GET_WOODS,\n    payload: request\n  };\n}","map":{"version":3,"sources":["D:/2077/Waves/client/src/actions/products_actions.js"],"names":["axios","GET_PRODUCTS_BY_SELL","GET_PRODUCTS_BY_ARRIVAL","GET_BRANDS","GET_WOODS","GET_PRODUCTS_TO_SHOP","PRODUCT_SERVER","getProductsBySell","request","get","then","response","data","catch","e","console","log","type","payload","getProductsByArrival","getProductsToShop","skip","limit","filters","previousState","post","newState","articles","size","getBrands","getWoods"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACIC,oBADJ,EAEIC,uBAFJ,EAGIC,UAHJ,EAIIC,SAJJ,EAKIC,oBALJ,QAMO,SANP;AAQA,SAASC,cAAT,QAA+B,0BAA/B;AAGA,OAAO,SAASC,iBAAT,GAA4B;AAC/B;AACA,QAAMC,OAAO,GAAGR,KAAK,CAACS,GAAN,CAAW,GAAEH,cAAe,0CAA5B,EACCI,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAD3B,EAECC,KAFD,CAEOC,CAAC,IAAIC,OAAO,CAACC,GAAR,CAAYF,CAAZ,CAFZ,CAAhB;AAGA,SAAO;AACHG,IAAAA,IAAI,EAAEhB,oBADH;AAEHiB,IAAAA,OAAO,EAAEV;AAFN,GAAP;AAIH;AAED,OAAO,SAASW,oBAAT,GAA+B;AAClC;AACA,QAAMX,OAAO,GAAGR,KAAK,CAACS,GAAN,CAAW,GAAEH,cAAe,+CAA5B,EACCI,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAD3B,EAECC,KAFD,CAEOC,CAAC,IAAIC,OAAO,CAACC,GAAR,CAAYF,CAAZ,CAFZ,CAAhB;AAGA,SAAO;AACHG,IAAAA,IAAI,EAAEf,uBADH;AAEHgB,IAAAA,OAAO,EAAEV;AAFN,GAAP;AAIH;AAED,OAAO,SAASY,iBAAT,CAA2BC,IAA3B,EAAiCC,KAAjC,EAAwCC,OAAO,GAAC,EAAhD,EAAoDC,aAAa,GAAC,EAAlE,EAAqE;AACxE,QAAMZ,IAAI,GAAG;AACTU,IAAAA,KADS;AAETD,IAAAA,IAFS;AAGTE,IAAAA;AAHS,GAAb;AAMA,QAAMf,OAAO,GAAGR,KAAK,CAACyB,IAAN,CAAY,GAAEnB,cAAe,OAA7B,EAAoCM,IAApC,EACCF,IADD,CACMC,QAAQ,IAAI;AACd,QAAIe,QAAQ,GAAG,CACX,GAAGF,aADQ,EAEX,GAAGb,QAAQ,CAACC,IAAT,CAAce,QAFN,CAAf;AAKA,WAAO;AACHC,MAAAA,IAAI,EAAEjB,QAAQ,CAACC,IAAT,CAAcgB,IADjB;AAEHD,MAAAA,QAAQ,EAAED;AAFP,KAAP;AAIH,GAXD,CAAhB;AAaA,SAAM;AACFT,IAAAA,IAAI,EAAEZ,oBADJ;AAEFa,IAAAA,OAAO,EAAEV;AAFP,GAAN;AAIH;AAED;;AACA;;AACA;;AAGA,OAAO,SAASqB,SAAT,GAAoB;AACvB,QAAMrB,OAAO,GAAGR,KAAK,CAACS,GAAN,CAAW,GAAEH,cAAe,SAA5B,EACCI,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAD3B,CAAhB;AAGA,SAAO;AACHK,IAAAA,IAAI,EAAEd,UADH;AAEHe,IAAAA,OAAO,EAAGV;AAFP,GAAP;AAIH;AAED,OAAO,SAASsB,QAAT,GAAmB;AACtB,QAAMtB,OAAO,GAAGR,KAAK,CAACS,GAAN,CAAW,GAAEH,cAAe,QAA5B,EACCI,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAD3B,CAAhB;AAGA,SAAO;AACHK,IAAAA,IAAI,EAAEb,SADH;AAEHc,IAAAA,OAAO,EAAGV;AAFP,GAAP;AAIH","sourcesContent":["import axios from 'axios';\r\nimport { \r\n    GET_PRODUCTS_BY_SELL,\r\n    GET_PRODUCTS_BY_ARRIVAL,\r\n    GET_BRANDS,\r\n    GET_WOODS,\r\n    GET_PRODUCTS_TO_SHOP\r\n} from \"./types\";\r\n\r\nimport { PRODUCT_SERVER } from '../components/utils/misc';\r\n\r\n\r\nexport function getProductsBySell(){\r\n    // /articles?sortBy=sold&order=desc&limit=4\r\n    const request = axios.get(`${PRODUCT_SERVER}/articles?sortBy=sold&order=desc&limit=4`)\r\n                    .then(response => response.data)\r\n                    .catch(e => console.log(e))\r\n    return {\r\n        type: GET_PRODUCTS_BY_SELL,\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport function getProductsByArrival(){\r\n    // /articles?sortBy=createdAt&order=desc&limit=4\r\n    const request = axios.get(`${PRODUCT_SERVER}/articles?sortBy=createdAt&order=desc&limit=4`)\r\n                    .then(response => response.data)\r\n                    .catch(e => console.log(e))\r\n    return {\r\n        type: GET_PRODUCTS_BY_ARRIVAL,\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport function getProductsToShop(skip, limit, filters=[], previousState=[]){\r\n    const data = {\r\n        limit,\r\n        skip,\r\n        filters\r\n    }\r\n\r\n    const request = axios.post(`${PRODUCT_SERVER}/shop`,data)\r\n                    .then(response => {\r\n                        let newState = [\r\n                            ...previousState,\r\n                            ...response.data.articles\r\n                        ]\r\n\r\n                        return {\r\n                            size: response.data.size,\r\n                            articles: newState\r\n                        }\r\n                    })\r\n\r\n    return{\r\n        type: GET_PRODUCTS_TO_SHOP,\r\n        payload: request\r\n    }\r\n}\r\n\r\n/* ================================== */\r\n/* Categories */\r\n/* ================================== */\r\n\r\n\r\nexport function getBrands(){\r\n    const request = axios.get(`${PRODUCT_SERVER}/brands`)\r\n                    .then(response => response.data );\r\n\r\n    return {\r\n        type: GET_BRANDS,\r\n        payload : request\r\n    }\r\n}\r\n\r\nexport function getWoods(){\r\n    const request = axios.get(`${PRODUCT_SERVER}/woods`)\r\n                    .then(response => response.data );\r\n\r\n    return {\r\n        type: GET_WOODS,\r\n        payload : request\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}