{"ast":null,"code":"var _jsxFileName = \"D:\\\\2077\\\\Waves\\\\client\\\\src\\\\components\\\\Register_login\\\\login.js\";\nimport React, { Component } from 'react';\nimport FormField from '../utils/Form/FormField';\nimport { update, generateData, isFormValid } from '../utils/Form/formActions';\nimport { connect } from 'react-redux';\nimport { loginUser } from '../../actions/user_actions';\n\nclass Login extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      formError: false,\n      formSuccess: '',\n      formdata: {\n        email: {\n          element: 'input',\n          value: '',\n          config: {\n            name: 'email_input',\n            type: 'email',\n            placeholder: 'Enter your email'\n          },\n          validation: {\n            required: true,\n            email: true\n          },\n          valid: false,\n          touches: false,\n          validationMessage: ''\n        },\n        password: {\n          element: 'input',\n          value: '',\n          config: {\n            name: 'password_input',\n            type: 'password',\n            placeholder: 'Enter your password'\n          },\n          validation: {\n            required: true\n          },\n          valid: false,\n          touches: false,\n          validationMessage: ''\n        }\n      }\n    };\n\n    this.updateForm = element => {\n      const newFormdata = update(element, this.state.formdata, 'login');\n      this.setState({\n        formError: false,\n        formdata: newFormdata\n      });\n    };\n\n    this.submitForm = event => {\n      event.preventDefault();\n      let dataToSubmit = generateData(this.state.formdata, 'login');\n      let formIsValid = isFormValid(this.state.formdata, 'login');\n\n      if (formIsValid) {\n        console.log(dataToSubmit);\n      } else {\n        this.setState({\n          formError: true\n        });\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"signin_wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: event => this.submitForm(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormField, {\n      id: \"email\",\n      formdata: this.state.formdata.email,\n      change: element => this.updateForm(element),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(FormField, {\n      id: \"password\",\n      formdata: this.state.formdata.password,\n      change: element => this.updateForm(element),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }\n    }), this.state.formError ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"error_label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 25\n      }\n    }, \"Please check your inputs\") : null, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: event => this.submitForm(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }\n    }, \"Log In\")));\n  }\n\n}\n\nexport default connect()(Login);","map":{"version":3,"sources":["D:/2077/Waves/client/src/components/Register_login/login.js"],"names":["React","Component","FormField","update","generateData","isFormValid","connect","loginUser","Login","state","formError","formSuccess","formdata","email","element","value","config","name","type","placeholder","validation","required","valid","touches","validationMessage","password","updateForm","newFormdata","setState","submitForm","event","preventDefault","dataToSubmit","formIsValid","console","log","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport FormField from '../utils/Form/FormField';\r\nimport {update, generateData, isFormValid} from '../utils/Form/formActions'\r\n\r\nimport { connect } from 'react-redux';\r\nimport { loginUser } from '../../actions/user_actions';\r\n\r\nclass Login extends Component {\r\n\r\n    state = {\r\n        formError: false,\r\n        formSuccess: '',\r\n        formdata: {\r\n            email:{\r\n                element: 'input',\r\n                value: '',\r\n                config: {\r\n                    name: 'email_input',\r\n                    type: 'email',\r\n                    placeholder: 'Enter your email'\r\n                },\r\n                validation: {\r\n                    required: true,\r\n                    email: true\r\n                },\r\n                valid: false,\r\n                touches: false,\r\n                validationMessage: ''\r\n            },\r\n            password:{\r\n                element: 'input',\r\n                value: '',\r\n                config: {\r\n                    name: 'password_input',\r\n                    type: 'password',\r\n                    placeholder: 'Enter your password'\r\n                },\r\n                validation: {\r\n                    required: true,\r\n                },\r\n                valid: false,\r\n                touches: false,\r\n                validationMessage: ''\r\n            }\r\n        }\r\n    }\r\n\r\n    updateForm = (element) => {\r\n        const newFormdata = update(element, this.state.formdata, 'login');\r\n        this.setState({\r\n            formError: false,\r\n            formdata: newFormdata\r\n        })\r\n    }\r\n\r\n    submitForm = (event) => {\r\n        event.preventDefault();\r\n\r\n        let dataToSubmit = generateData(this.state.formdata, 'login');\r\n        let formIsValid = isFormValid(this.state.formdata, 'login');\r\n\r\n        if(formIsValid){\r\n            console.log(dataToSubmit)\r\n        }else{\r\n            this.setState({\r\n                formError: true\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"signin_wrapper\">\r\n                <form onSubmit={(event) => this.submitForm(event)}>\r\n\r\n                    <FormField \r\n                        id={\"email\"}\r\n                        formdata = {this.state.formdata.email}\r\n                        change={(element) => this.updateForm(element)}\r\n                    />\r\n\r\n                    <FormField \r\n                        id={\"password\"}\r\n                        formdata = {this.state.formdata.password}\r\n                        change={(element) => this.updateForm(element)}\r\n                    />\r\n\r\n                    {this.state.formError ? \r\n                        <div className=\"error_label\">Please check your inputs</div>\r\n                    :null}\r\n                    <button onClick={ (event) => this.submitForm(event)} >Log In</button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect()(Login);"]},"metadata":{},"sourceType":"module"}