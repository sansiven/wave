{"ast":null,"code":"var _jsxFileName = \"D:\\\\2077\\\\Waves\\\\client\\\\src\\\\components\\\\utils\\\\Form\\\\FormField.js\";\nimport React from 'react';\n\nconst FormField = ({\n  formdata,\n  change,\n  id\n}) => {\n  const showError = () => {\n    let errorMessage = null;\n\n    if (formdata.validation && !formdata.valid) {\n      errorMessage = /*#__PURE__*/React.createElement(\"div\", {\n        className: \"error_label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 17\n        }\n      }, formdata.validationMessage);\n    }\n\n    return errorMessage;\n  };\n\n  const renderTemplate = () => {\n    let formTemplate = null;\n\n    switch (formdata.element) {\n      case 'input':\n        formTemplate = /*#__PURE__*/React.createElement(\"div\", {\n          className: \"formBlock\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"input\", Object.assign({}, formdata.config, {\n          value: formdata.value,\n          onBlur: event => change({\n            event,\n            id,\n            blur: true\n          }),\n          onChange: event => change({\n            event,\n            id\n          }),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 25\n          }\n        })), showError());\n        break;\n\n      default:\n        formTemplate = null;\n    }\n\n    return formTemplate;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, renderTemplate());\n};\n\nexport default FormField;","map":{"version":3,"sources":["D:/2077/Waves/client/src/components/utils/Form/FormField.js"],"names":["React","FormField","formdata","change","id","showError","errorMessage","validation","valid","validationMessage","renderTemplate","formTemplate","element","config","value","event","blur"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAACC,EAAAA,QAAD;AAAWC,EAAAA,MAAX;AAAmBC,EAAAA;AAAnB,CAAD,KAA4B;AAE1C,QAAMC,SAAS,GAAE,MAAM;AACnB,QAAIC,YAAY,GAAG,IAAnB;;AACA,QAAGJ,QAAQ,CAACK,UAAT,IAAuB,CAACL,QAAQ,CAACM,KAApC,EAA0C;AACtCF,MAAAA,YAAY,gBACR;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKJ,QAAQ,CAACO,iBADd,CADJ;AAKH;;AAED,WAAOH,YAAP;AACH,GAXD;;AAaA,QAAMI,cAAc,GAAG,MAAM;AACzB,QAAIC,YAAY,GAAG,IAAnB;;AAEA,YAAOT,QAAQ,CAACU,OAAhB;AAEI,WAAK,OAAL;AACID,QAAAA,YAAY,gBACR;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI,+CACQT,QAAQ,CAACW,MADjB;AAEI,UAAA,KAAK,EAAEX,QAAQ,CAACY,KAFpB;AAGI,UAAA,MAAM,EAAGC,KAAD,IAAWZ,MAAM,CAAC;AAACY,YAAAA,KAAD;AAAQX,YAAAA,EAAR;AAAYY,YAAAA,IAAI,EAAC;AAAjB,WAAD,CAH7B;AAII,UAAA,QAAQ,EAAGD,KAAD,IAAWZ,MAAM,CAAC;AAACY,YAAAA,KAAD;AAAQX,YAAAA;AAAR,WAAD,CAJ/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ,EAOKC,SAAS,EAPd,CADJ;AAWJ;;AAEA;AACIM,QAAAA,YAAY,GAAG,IAAf;AAjBR;;AAoBA,WAAOA,YAAP;AACH,GAxBD;;AA0BA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,cAAc,EADnB,CADJ;AAKH,CA9CD;;AAgDA,eAAeT,SAAf","sourcesContent":["import React from 'react';\r\n\r\nconst FormField = ({formdata, change, id}) => {\r\n\r\n    const showError =() => {\r\n        let errorMessage = null;\r\n        if(formdata.validation && !formdata.valid){\r\n            errorMessage = (\r\n                <div className=\"error_label\">\r\n                    {formdata.validationMessage}\r\n                </div>\r\n            )\r\n        }\r\n\r\n        return errorMessage;\r\n    }\r\n    \r\n    const renderTemplate = () => {\r\n        let formTemplate = null;\r\n\r\n        switch(formdata.element){\r\n\r\n            case('input'):\r\n                formTemplate = (\r\n                    <div className=\"formBlock\">\r\n                        <input \r\n                            {...formdata.config}\r\n                            value={formdata.value}\r\n                            onBlur={(event) => change({event, id, blur:true})}\r\n                            onChange={(event) => change({event, id})}\r\n                        />\r\n                        {showError()}\r\n                    </div>\r\n                )\r\n            break;\r\n\r\n            default:\r\n                formTemplate = null;\r\n        }\r\n\r\n        return formTemplate;\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            {renderTemplate()}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FormField;"]},"metadata":{},"sourceType":"module"}