{"ast":null,"code":"var _jsxFileName = \"D:\\\\2077\\\\Waves\\\\client\\\\src\\\\components\\\\Register_login\\\\register.js\";\nimport React, { Component } from 'react';\nimport FormField from '../utils/Form/FormField';\nimport { update, generateData, isFormValid } from '../utils/Form/formActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport { connect } from 'react-redux';\nimport { registerUser } from '../../actions/user_actions';\n\nclass Register extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      formError: false,\n      formSuccess: '',\n      formdata: {\n        name: {\n          element: 'input',\n          value: '',\n          config: {\n            name: 'name_input',\n            type: 'text',\n            placeholder: 'Enter your name'\n          },\n          validation: {\n            required: true\n          },\n          valid: false,\n          touches: false,\n          validationMessage: ''\n        },\n        lastname: {\n          element: 'input',\n          value: '',\n          config: {\n            name: 'lastname_input',\n            type: 'text',\n            placeholder: 'Enter your lastname'\n          },\n          validation: {\n            required: true\n          },\n          valid: false,\n          touches: false,\n          validationMessage: ''\n        },\n        email: {\n          element: 'input',\n          value: '',\n          config: {\n            name: 'email_input',\n            type: 'email',\n            placeholder: 'Enter your email'\n          },\n          validation: {\n            required: true,\n            email: true\n          },\n          valid: false,\n          touches: false,\n          validationMessage: ''\n        },\n        password: {\n          element: 'input',\n          value: '',\n          config: {\n            name: 'password_input',\n            type: 'password',\n            placeholder: 'Enter your password'\n          },\n          validation: {\n            required: true\n          },\n          valid: false,\n          touches: false,\n          validationMessage: ''\n        },\n        confirmPassword: {\n          element: 'input',\n          value: '',\n          config: {\n            name: 'confirm_password_input',\n            type: 'password',\n            placeholder: 'Confirm your password'\n          },\n          validation: {\n            required: true,\n            confirm: 'password'\n          },\n          valid: false,\n          touches: false,\n          validationMessage: ''\n        }\n      }\n    };\n\n    this.updateForm = element => {\n      const newFormdata = update(element, this.state.formdata, 'register');\n      this.setState({\n        formError: false,\n        formdata: newFormdata\n      });\n    };\n\n    this.submitForm = event => {\n      event.preventDefault();\n      let dataToSubmit = generateData(this.state.formdata, 'register');\n      let formIsValid = isFormValid(this.state.formdata, 'register');\n\n      if (formIsValid) {\n        //console.log(dataToSubmit)\n        this.props.dispatch(registerUser(dataToSubmit)).then(response => {\n          if (response.payload.success) {\n            this.setState({\n              formError: false,\n              formSuccess: true\n            });\n            setTimeout(() => {\n              this.props.history.push('/register_login');\n            }, 2000);\n          } else {\n            this.setState({\n              formError: true\n            });\n          }\n        }).catch(e => this.setState({\n          formError: true\n        }));\n      } else {\n        this.setState({\n          formError: true\n        });\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"page_wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"register_login_container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: event => this.submitForm(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 33\n      }\n    }, \"Personal Information\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form_block_two\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(FormField, {\n      id: \"name\",\n      formdata: this.state.formdata.name,\n      change: element => this.updateForm(element),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(FormField, {\n      id: \"lastname\",\n      formdata: this.state.formdata.lastname,\n      change: element => this.updateForm(element),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 41\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FormField, {\n      id: \"email\",\n      formdata: this.state.formdata.email,\n      change: element => this.updateForm(element),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 33\n      }\n    }, \"Verify Password\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form_block_two\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(FormField, {\n      id: \"password\",\n      formdata: this.state.formdata.password,\n      change: element => this.updateForm(element),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(FormField, {\n      id: \"confirmPassword\",\n      formdata: this.state.formdata.confirmPassword,\n      change: element => this.updateForm(element),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 41\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 33\n      }\n    }, this.state.formError ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"error_label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 41\n      }\n    }, \"Please check your data\") : null, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: event => this.submitForm(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 37\n      }\n    }, \"Create an account\")))))), /*#__PURE__*/React.createElement(Dialog, {\n      open: this.state.formSuccess,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dialog_alert\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 25\n      }\n    }, \"Congratulations!!\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 25\n      }\n    }, \"You will be redirected to the LOGIN in a couple seconds.\"))));\n  }\n\n}\n\nexport default connect()(Register);","map":{"version":3,"sources":["D:/2077/Waves/client/src/components/Register_login/register.js"],"names":["React","Component","FormField","update","generateData","isFormValid","Dialog","connect","registerUser","Register","state","formError","formSuccess","formdata","name","element","value","config","type","placeholder","validation","required","valid","touches","validationMessage","lastname","email","password","confirmPassword","confirm","updateForm","newFormdata","setState","submitForm","event","preventDefault","dataToSubmit","formIsValid","props","dispatch","then","response","payload","success","setTimeout","history","push","catch","e","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport FormField from '../utils/Form/FormField';\r\nimport {update, generateData, isFormValid} from '../utils/Form/formActions';\r\nimport Dialog from '@material-ui/core/Dialog';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { registerUser } from '../../actions/user_actions';\r\n\r\nclass Register extends Component {\r\n\r\n\r\n    state = {\r\n        formError: false,\r\n        formSuccess: '',\r\n        formdata: {\r\n            name:{\r\n                element: 'input',\r\n                value: '',\r\n                config: {\r\n                    name: 'name_input',\r\n                    type: 'text',\r\n                    placeholder: 'Enter your name'\r\n                },\r\n                validation: {\r\n                    required: true,\r\n                },\r\n                valid: false,\r\n                touches: false,\r\n                validationMessage: ''\r\n            },\r\n            lastname:{\r\n                element: 'input',\r\n                value: '',\r\n                config: {\r\n                    name: 'lastname_input',\r\n                    type: 'text',\r\n                    placeholder: 'Enter your lastname'\r\n                },\r\n                validation: {\r\n                    required: true,\r\n                },\r\n                valid: false,\r\n                touches: false,\r\n                validationMessage: ''\r\n            },\r\n            email:{\r\n                element: 'input',\r\n                value: '',\r\n                config: {\r\n                    name: 'email_input',\r\n                    type: 'email',\r\n                    placeholder: 'Enter your email'\r\n                },\r\n                validation: {\r\n                    required: true,\r\n                    email: true\r\n                },\r\n                valid: false,\r\n                touches: false,\r\n                validationMessage: ''\r\n            },\r\n            password:{\r\n                element: 'input',\r\n                value: '',\r\n                config: {\r\n                    name: 'password_input',\r\n                    type: 'password',\r\n                    placeholder: 'Enter your password'\r\n                },\r\n                validation: {\r\n                    required: true,\r\n                },\r\n                valid: false,\r\n                touches: false,\r\n                validationMessage: ''\r\n            },\r\n            confirmPassword:{\r\n                element: 'input',\r\n                value: '',\r\n                config: {\r\n                    name: 'confirm_password_input',\r\n                    type: 'password',\r\n                    placeholder: 'Confirm your password'\r\n                },\r\n                validation: {\r\n                    required: true,\r\n                    confirm: 'password'\r\n                },\r\n                valid: false,\r\n                touches: false,\r\n                validationMessage: ''\r\n            }\r\n        }\r\n    }\r\n\r\n    updateForm = (element) => {\r\n        const newFormdata = update(element, this.state.formdata, 'register');\r\n        this.setState({\r\n            formError: false,\r\n            formdata: newFormdata\r\n        })\r\n    }\r\n\r\n    submitForm = (event) => {\r\n        event.preventDefault();\r\n\r\n        let dataToSubmit = generateData(this.state.formdata, 'register');\r\n        let formIsValid = isFormValid(this.state.formdata, 'register');\r\n\r\n        if(formIsValid){\r\n            //console.log(dataToSubmit)\r\n            this.props.dispatch(registerUser(dataToSubmit))\r\n            .then(response =>{\r\n                if(response.payload.success){\r\n                    this.setState({\r\n                        formError: false,\r\n                        formSuccess: true\r\n                    });\r\n                    setTimeout(() => {\r\n                        this.props.history.push('/register_login');\r\n                    }, 2000)\r\n                }else{\r\n                    this.setState({\r\n                        formError: true\r\n                    })\r\n                }\r\n            }).catch( e => this.setState({formError: true}))\r\n        }else{\r\n            this.setState({\r\n                formError: true\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"page_wrapper\">\r\n                <div className=\"container\">\r\n                    <div className=\"register_login_container\">\r\n                        <div className=\"left\">\r\n                            <form onSubmit={(event) => this.submitForm(event)}>\r\n                                <h2>Personal Information</h2>\r\n                                <div className=\"form_block_two\">\r\n                                    <div className=\"block\">\r\n                                        <FormField \r\n                                            id={\"name\"}\r\n                                            formdata = {this.state.formdata.name}\r\n                                            change={(element) => this.updateForm(element)}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"block\">\r\n                                        <FormField \r\n                                            id={\"lastname\"}\r\n                                            formdata = {this.state.formdata.lastname}\r\n                                            change={(element) => this.updateForm(element)}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div>\r\n                                    <FormField \r\n                                        id={\"email\"}\r\n                                        formdata = {this.state.formdata.email}\r\n                                        change={(element) => this.updateForm(element)}\r\n                                    />\r\n                                </div>\r\n                                <h2>Verify Password</h2>\r\n                                <div className=\"form_block_two\">\r\n                                    <div className=\"block\">\r\n                                        <FormField \r\n                                            id={\"password\"}\r\n                                            formdata = {this.state.formdata.password}\r\n                                            change={(element) => this.updateForm(element)}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"block\">\r\n                                        <FormField \r\n                                            id={\"confirmPassword\"}\r\n                                            formdata = {this.state.formdata.confirmPassword}\r\n                                            change={(element) => this.updateForm(element)}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div>\r\n                                    {this.state.formError ? \r\n                                        <div className=\"error_label\">Please check your data</div>\r\n                                    :null}\r\n                                    <button onClick={ (event) => this.submitForm(event)} >Create an account</button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <Dialog open={this.state.formSuccess}>\r\n                    <div className=\"dialog_alert\">\r\n                        <div>Congratulations!!</div>\r\n                        <div>\r\n                            You will be redirected to the LOGIN in a couple seconds.\r\n                        </div>\r\n                    </div>\r\n                </Dialog>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect()(Register);"]},"metadata":{},"sourceType":"module"}