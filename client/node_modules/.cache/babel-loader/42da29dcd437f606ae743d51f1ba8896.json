{"ast":null,"code":"import axios from 'axios';\nimport { GET_PRODUCTS_BY_SELL, GET_PRODUCTS_BY_ARRIVAL, GET_BRANDS, ADD_BRAND, GET_WOODS, ADD_WOOD, GET_PRODUCTS_TO_SHOP, ADD_PRODUCT, CLEAR_PRODUCT } from \"./types\";\nimport { PRODUCT_SERVER } from '../components/utils/misc';\nexport function getProductsBySell() {\n  // /articles?sortBy=sold&order=desc&limit=4\n  const request = axios.get(`${PRODUCT_SERVER}/articles?sortBy=sold&order=desc&limit=4`).then(response => response.data).catch(e => console.log(e));\n  return {\n    type: GET_PRODUCTS_BY_SELL,\n    payload: request\n  };\n}\nexport function getProductsByArrival() {\n  // /articles?sortBy=createdAt&order=desc&limit=4\n  const request = axios.get(`${PRODUCT_SERVER}/articles?sortBy=createdAt&order=desc&limit=4`).then(response => response.data).catch(e => console.log(e));\n  return {\n    type: GET_PRODUCTS_BY_ARRIVAL,\n    payload: request\n  };\n}\nexport function getProductsToShop(skip, limit, filters = [], previousState = []) {\n  const data = {\n    limit,\n    skip,\n    filters\n  };\n  const request = axios.post(`${PRODUCT_SERVER}/shop`, data).then(response => {\n    let newState = [...previousState, ...response.data.articles];\n    return {\n      size: response.data.size,\n      articles: newState\n    };\n  });\n  return {\n    type: GET_PRODUCTS_TO_SHOP,\n    payload: request\n  };\n}\nexport function addProduct(dataToSubmit) {\n  const request = axios.post(`${PRODUCT_SERVER}/article`, dataToSubmit).then(response => response.data).catch(e => console.log(e));\n  return {\n    type: ADD_PRODUCT,\n    payload: request\n  };\n}\nexport function clearProduct() {\n  return {\n    type: CLEAR_PRODUCT,\n    payload: ''\n  };\n}\n/* ================================== */\n\n/* Categories */\n\n/* ================================== */\n\nexport function getBrands() {\n  const request = axios.get(`${PRODUCT_SERVER}/brands`).then(response => response.data);\n  return {\n    type: GET_BRANDS,\n    payload: request\n  };\n}\nexport function getWoods() {\n  const request = axios.get(`${PRODUCT_SERVER}/woods`).then(response => response.data);\n  return {\n    type: GET_WOODS,\n    payload: request\n  };\n}\nexport function addBrand(dataToSubmit, existingBrands) {\n  const request = axios.post(`${PRODUCT_SERVER}/brand`, dataToSubmit).then(response => {\n    let brands = [...existingBrands, response.data.brand];\n    return {\n      success: response.data.success,\n      brands\n    };\n  });\n  return {\n    type: ADD_BRAND,\n    payload: request\n  };\n}\nexport function addWood(dataToSubmit, existingWoods) {\n  const request = axios.post(`${PRODUCT_SERVER}/wood`, dataToSubmit).then(response => {\n    let woods = [...existingWoods, response.data.wood];\n    return {\n      success: response.data.success,\n      woods\n    };\n  });\n  return {\n    type: ADD_WOOD,\n    payload: request\n  };\n}","map":{"version":3,"sources":["D:/2077/Waves/client/src/actions/products_actions.js"],"names":["axios","GET_PRODUCTS_BY_SELL","GET_PRODUCTS_BY_ARRIVAL","GET_BRANDS","ADD_BRAND","GET_WOODS","ADD_WOOD","GET_PRODUCTS_TO_SHOP","ADD_PRODUCT","CLEAR_PRODUCT","PRODUCT_SERVER","getProductsBySell","request","get","then","response","data","catch","e","console","log","type","payload","getProductsByArrival","getProductsToShop","skip","limit","filters","previousState","post","newState","articles","size","addProduct","dataToSubmit","clearProduct","getBrands","getWoods","addBrand","existingBrands","brands","brand","success","addWood","existingWoods","woods","wood"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport { \r\n    GET_PRODUCTS_BY_SELL,\r\n    GET_PRODUCTS_BY_ARRIVAL,\r\n    GET_BRANDS,\r\n    ADD_BRAND,\r\n    GET_WOODS,\r\n    ADD_WOOD,\r\n    GET_PRODUCTS_TO_SHOP,\r\n    ADD_PRODUCT,\r\n    CLEAR_PRODUCT\r\n} from \"./types\";\r\n\r\nimport { PRODUCT_SERVER } from '../components/utils/misc';\r\n\r\n\r\nexport function getProductsBySell(){\r\n    // /articles?sortBy=sold&order=desc&limit=4\r\n    const request = axios.get(`${PRODUCT_SERVER}/articles?sortBy=sold&order=desc&limit=4`)\r\n                    .then(response => response.data)\r\n                    .catch(e => console.log(e))\r\n    return {\r\n        type: GET_PRODUCTS_BY_SELL,\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport function getProductsByArrival(){\r\n    // /articles?sortBy=createdAt&order=desc&limit=4\r\n    const request = axios.get(`${PRODUCT_SERVER}/articles?sortBy=createdAt&order=desc&limit=4`)\r\n                    .then(response => response.data)\r\n                    .catch(e => console.log(e))\r\n    return {\r\n        type: GET_PRODUCTS_BY_ARRIVAL,\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport function getProductsToShop(skip, limit, filters=[], previousState=[]){\r\n    const data = {\r\n        limit,\r\n        skip,\r\n        filters\r\n    }\r\n\r\n    const request = axios.post(`${PRODUCT_SERVER}/shop`,data)\r\n                    .then(response => {\r\n                        let newState = [\r\n                            ...previousState,\r\n                            ...response.data.articles\r\n                        ]\r\n\r\n                        return {\r\n                            size: response.data.size,\r\n                            articles: newState\r\n                        }\r\n                    })\r\n\r\n    return{\r\n        type: GET_PRODUCTS_TO_SHOP,\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport function addProduct(dataToSubmit){\r\n\r\n    const request = axios.post(`${PRODUCT_SERVER}/article`,dataToSubmit)\r\n                    .then(response => response.data)\r\n                    .catch(e => console.log(e))\r\n\r\n    return {\r\n        type: ADD_PRODUCT,\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport function clearProduct(){\r\n    return {\r\n        type: CLEAR_PRODUCT,\r\n        payload: ''\r\n    }\r\n}\r\n\r\n/* ================================== */\r\n/* Categories */\r\n/* ================================== */\r\n\r\n\r\nexport function getBrands(){\r\n    const request = axios.get(`${PRODUCT_SERVER}/brands`)\r\n                    .then(response => response.data );\r\n\r\n    return {\r\n        type: GET_BRANDS,\r\n        payload : request\r\n    }\r\n}\r\n\r\nexport function getWoods(){\r\n    const request = axios.get(`${PRODUCT_SERVER}/woods`)\r\n                    .then(response => response.data );\r\n\r\n    return {\r\n        type: GET_WOODS,\r\n        payload : request\r\n    }\r\n}\r\n\r\nexport function addBrand(dataToSubmit, existingBrands){\r\n    const request = axios.post(`${PRODUCT_SERVER}/brand`,dataToSubmit)\r\n    .then(response=>{\r\n        let brands = [\r\n            ...existingBrands,\r\n            response.data.brand\r\n        ];\r\n        return {\r\n            success: response.data.success,\r\n            brands\r\n        }\r\n    });\r\n    return {\r\n        type: ADD_BRAND,\r\n        payload: request\r\n    }\r\n}\r\n\r\n\r\nexport function addWood(dataToSubmit, existingWoods){\r\n    const request = axios.post(`${PRODUCT_SERVER}/wood`,dataToSubmit)\r\n    .then(response=>{\r\n        let woods = [\r\n            ...existingWoods,\r\n            response.data.wood\r\n        ];\r\n        return {\r\n            success: response.data.success,\r\n            woods\r\n        }\r\n    });\r\n    return {\r\n        type: ADD_WOOD,\r\n        payload: request\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}